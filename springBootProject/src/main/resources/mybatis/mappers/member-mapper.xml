<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResult" type="MemberDto">
    <id column="USER_NO" property="userNo"/>
    <result column="USER_ID" property="userId"/>
    <result column="USER_PWD" property="userPwd"/>
    <result column="USER_NAME" property="userName"/>
    <result column="BIRTH_DATE" property="birthDate"/>
    <result column="NICKNAME" property="nickName"/>
    <result column="PHONE" property="phone"/>
    <result column="EMAIL" property="email"/>
    <result column="ADDRESS" property="address"/>
    <result column="ADDRESS_DETAIL" property="addressDatail"/>
    <result column="ENROLL_DATE" property="enrollDate"/>
    <result column="MODIFY_DATE" property="modifyDate"/>
    <result column="USER_TYPE" property="userType"/>
    <result column="USER_STATUS" property="userStatus"/>
    <result column="USER_PATH" property="userPath"/>
    <result column="STREET_ADDRESS" property="streetAddress"/>
    <result column="OTHER_ADDERSS" property="otherAddress"/>
    <result column="POINT" property="point"/>
    <result column="COUPON" property="coupon"/>
  </resultMap>
  
  <resultMap id="messageResult" type="MessageBoxDto">
    <id column="MESSAGE_NO" property="messageNo"/>
    <result column="SEND_ID" property="sendId"/>
    <result column="RECEIVE_ID" property="receiveId"/>
    <result column="TITLE" property="title"/>
    <result column="CONTENT" property="content"/>
    <result column="DATE_SEND" property="dateSend"/>
    <result column="DATE_READ" property="dateRead"/>
    <result column="MESSAGE_STATUS" property="msgStatus"/>
    <result column="MESSAGE_COLLECT" property="msgCollect"/>
    <result column="SEND_DEL_STATUS" property="sendDelStatus"/>
    <result column="RECEIVE_DEL_STATUS" property="reDelStatus"/>
    <result column="CUSTODY" property="custody"/>
    <result column="SEND_NICKNAME" property="sendNickName"/>   
    <result column="RECEIVE_NICKNAME" property="receiveNickName"/>
  </resultMap>
  

	<!-- 로그인용 -->
	<select id="selectMember" resultMap="memberResult">
		<!-- * 암호화 적용전 -->
		<!--  
		select
			 	   user_no, user_id, user_pwd
			 	 , user_name, email, gender
			 	 , phone, address, profile_url
			 	 , signup_date, modify_date
			from member
		 where status in ('Y', 'A')
		   and user_id = #{userId}
		   and user_pwd = #{userPwd}
		-->
		
		<!-- * 암호화 적용후 -->
		SELECT
				  USER_NO
				,	USER_ID
				,	USER_PWD
				,	USER_NAME
				,	BIRTH_DATE
				,	NICKNAME
				,	EMAIL
				,	ADDRESS
				,	ADDRESS_DETAIL
				, STREET_ADDRESS
			  , OTHER_ADDERSS
			  , PHONE
			  , USER_TYPE
			  , USER_PATH
		FROM TB_MEMBER
	 WHERE USER_STATUS = 'Y'
	   AND USER_TYPE IN ('M', 'E')
	   AND USER_ID = #{userId}
	</select>

	<!-- 닉네임 중복 체크용 -->
  <select id="selectNickNamecount" resultType="_int">
  	SELECT COUNT(*)
  	  FROM TB_MEMBER
  	 WHERE NICKNAME = #{checkNickName}
  </select>
  
  <!-- 아이디 중복 체크용 -->
  <select id="selectUserIdCount" resultType="_int">
  	SELECT COUNT(*)
  	  FROM TB_MEMBER
  	 WHERE USER_ID = #{checkId}
  </select>
  <!-- 회원가입용 -->
  <insert id="insertMember">
  	INSERT
  		INTO
  			TB_MEMBER
  			(
  			USER_NO
			,	USER_ID
			,	USER_PWD
			,	USER_NAME
			,	PHONE
			,	BIRTH_DATE
			,	NICKNAME
			,	EMAIL
			,	ADDRESS
			,	ADDRESS_DETAIL
			, STREET_ADDRESS
			, OTHER_ADDERSS
  			)
  			VALUES
  			(
  			SEQ_MNO.NEXTVAL
  		, #{userId}
  		, #{userPwd}
  		, #{userName}
  		, #{phone}
  		, #{birthDate}
  		, #{nickName}
  		, #{email}
  		, #{address}
  		, #{addressDatail}
  		, #{streetAddress}
  		, #{otherAddress}
  			)
  	<selectKey keyProperty="userNo" resultType="int" order="AFTER">
        SELECT SEQ_MNO.CURRVAL AS USER_NO FROM DUAL
    </selectKey>
  </insert>
  
  <!-- 쿠폰 발급 -->
  <insert id="insertCoupon">
  	INSERT
  	    INTO
  	     TB_COUPON
  	     (
					COUPON_NO
				,	COUPON_SERIAL_NUM
				,	USER_NO
				,	COUPON_NAME
				,	COUPON_EXPRIY_DATE
  	     )
  	    VALUES
  	    (
  	     SEQ_COUNO.NEXTVAL
  	   , #{couponSerialNumber}
  	   , #{userNo}
  	   , #{couponName}
  	   , SYSDATE + 30
  	    )
  </insert>
  
  <!-- 아이디 찾기 -->
  <select id="selectFindUserId" resultMap="memberResult">
  	SELECT USER_ID
  			 , ENROLL_DATE
  	  FROM TB_MEMBER
  	 WHERE USER_NAME = #{userName}
  	   AND EMAIL = #{email}
  	 <if test="userId != null and !userId.equals('')">
			 AND USER_ID = #{userId}
  	 </if>
  </select>
  
  <!-- 임시비밀번호로 비밀번호 변경 -->
  <update id="findPwdChange">
  	UPDATE TB_MEMBER
  	  SET USER_PWD = #{changePwd}
  	WHERE USER_ID = #{userId}
  	  AND USER_NAME = #{userName}
  	  AND EMAIL = #{email}
  </update>
  
  
  
  <!-- =================== websocket 쪽지 ================= -->
  <insert id="insertSend" parameterType="com.mh.boot.dto.MessageBoxDto" useGeneratedKeys="true" keyProperty="messageNo">
  	INSERT
  			INTO
  			 TB_MESSAGE_BOX
  			 (
  			   MESSAGE_NO
  			 , SEND_ID
  			 , RECEIVE_ID
  			 , CONTENT
  			 , TITLE
  			 , SEND_NICKNAME
  			 )
	  		VALUES
	  		(
	  		SEQ_MESNO.NEXTVAL
	  	, #{sendId}
	  	, #{receiveId}
	  	, #{content}
	  	, #{title}
	  	, #{sendNickName}
	  		)
    <selectKey keyProperty="messageNo" resultType="int" order="AFTER">
        SELECT SEQ_MESNO.CURRVAL AS MESSAGE_NO FROM DUAL
    </selectKey>
  </insert>
   
   
	 <select id="selectMessage" resultMap="messageResult">
	 	SELECT
				   MESSAGE_NO
				 , SEND_ID
				 , RECEIVE_ID
				 , TITLE
				 , CONTENT
				 , DATE_SEND
				 , DATE_READ
				 , (SELECT NICKNAME
            FROM TB_MEMBER
           WHERE SEND_ID = USER_ID) SEND_NICKNAME
		 FROM TB_MESSAGE_BOX
		WHERE MESSAGE_NO = #{messageNo}
	 </select>
  
  <update id="updateMessage">
    UPDATE TB_MESSAGE_BOX
    <set>
        <choose>
            <when test="type != null and type.equals('read')">
                DATE_READ = SYSDATE
            </when>
            <when test="type != null and type.equals('receive')">
                RECEIVE_DEL_STATUS = 'Y'
            </when>
            <when test="type != null and type.equals('send')">
                SEND_DEL_STATUS = 'Y'
            </when>
            <when test="type != null and type.equals('collect')">
                MESSAGE_COLLECT = 'Y'
            </when>
            <when test="type != null and type.equals('deleteCustody')">
                CUSTODY = 'N',
                RECEIVE_DEL_STATUS = 'Y',
                SEND_DEL_STATUS = 'Y'
            </when>
            <otherwise>
                CUSTODY = 'Y'
            </otherwise>
        </choose>
    </set>
    WHERE MESSAGE_NO = #{messageNo}
    <if test="type != null and type.equals('deleteCustody')">
        AND (SEND_ID = #{userId} OR RECEIVE_ID = #{userId})
    </if>
</update>

 
 
 <select id="selectLoginUserPwd" resultType="string">
 	SELECT USER_PWD
 	  FROM TB_MEMBER
 	 WHERE USER_ID = #{userId}
 </select>


	<update id="updateUserModifyProfile">
		UPDATE TB_MEMBER
		   SET USER_NAME = #{userName}
			   , BIRTH_DATE = #{birthDate}
			   , NICKNAME = #{nickName}
			   , PHONE = #{phone}
			   , EMAIL = #{email}
			   , ADDRESS = #{address}
			   , ADDRESS_DETAIL = #{addressDatail}
			   , STREET_ADDRESS = #{streetAddress}
			   , OTHER_ADDERSS = #{otherAddress}
		WHERE USER_ID = #{userId}
	</update>
	
	
	<update id="updateProfileImg">
		UPDATE TB_MEMBER
		  SET USER_PATH = #{userPath}
		    , MODIFY_DATE = SYSDATE
		WHERE USER_ID = #{userId}
	</update>

	<!-- 비밀번호 변경 -->
	<update id="updatePassword">
		UPDATE TB_MEMBER
		   SET USER_PWD = #{modifyPwd}
		 WHERE USER_ID = #{userId}
	</update>

	<!-- 회원탈퇴용 -->
	<update id="deleteMember">
		UPDATE TB_MEMBER
			SET USER_STATUS = 'N'
		WHERE USER_ID = #{userId}
	</update>

 	<select id="userSearch" resultMap="memberResult">
 		SELECT  USER_ID
 					, NICKNAME
 		 FROM TB_MEMBER
 		 <where>
 		 	<choose>
 		 		<when test="userNo != null and !userNo.equals('')">
 		 		USER_NO = #{userNo}
 		 		</when>
 		 		<otherwise>
 		 		NICKNAME = #{nickName}
 		 		</otherwise>
 		 	</choose>
 		 </where>
 	</select>
 	
 	<select id="selectEmailCheck" resultType="_int">
 		SELECT COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE EMAIL = #{mails}
 	</select>

  


</mapper>
