<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="communityMapper">

	<resultMap id="communityResult" type="CommunityDto">
    <id column="POST_NO" property="postNo"/>
    <result column="POST_CONTENT" property="postContent"/>
    <result column="POST_TITLE" property="postTitle"/>
    <result column="WRITER_NO" property="writerNo"/>
    <result column="WRITER_NICKNAME" property="writerNickName"/>
    <result column="POST_TYPE" property="postType"/>
    <result column="POST_UPLOAD_DATE" property="postUploadDt"/>
    <result column="FILE_STATUS" property="fileStatus"/>
    <result column="POST_STATUS" property="postStatus"/>
    <result column="POST_COUNT" property="postCount"/>
    <result column="POST_LIKE" property="postLike"/>
    <result column="LOCATION_NAME" property="locationName"/>
    <result column="USER_PATH" property="userPath"/>
    
    <collection resultMap="attachResult" property="attachList" />
  </resultMap>
  
  <resultMap id="attachResult" type="AttachDto">
		<id column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="filesystem_name" property="filesystemName"/>
		<result column="original_name" property="originalName"/>
	</resultMap>
	
	<resultMap id="commentResult" type="CommentDto">
    <id column="ID" property="id"/>
    <result column="ANSWER_NUM" property="answerNum"/>
    <result column="CONTENT" property="content"/>
    <result column="REF_GROUP" property="refGroup"/>
    <result column="REF_ORDER" property="refOrder"/>
    <result column="STEP" property="step"/>
    <result column="PARENT_NUM" property="parentNum"/>
    <result column="BOARD_NO" property="boardNo"/>
    <result column="REGIST_DATE" property="registDt"/>
    <result column="MODIFY_DATE" property="modifyDt"/>
    <result column="DEL_YN" property="delYN"/>
    <result column="USER_NO" property="userNo"/>
    <result column="USER_NICKNAME" property="userNickName"/>
  </resultMap>
	
	<resultMap id="messageResult" type="MessageBoxDto">
    <id column="MESSAGE_NO" property="messageNo"/>
    <result column="SEND_ID" property="sendId"/>
    <result column="RECEIVE_ID" property="receiveId"/>
    <result column="TITLE" property="title"/>
    <result column="CONTENT" property="content"/>
    <result column="DATE_SEND" property="dateSend"/>
    <result column="DATE_READ" property="dateRead"/>
    <result column="MESSAGE_STATUS" property="msgStatus"/>
    <result column="MESSAGE_COLLECT" property="msgCollect"/>
    <result column="SEND_DEL_STATUS" property="sendDelStatus"/>
    <result column="RECEIVE_DEL_STATUS" property="reDelStatus"/>
    <result column="CUSTODY" property="custody"/>
    
    <result column="SEND_NICKNAME" property="sendNickName"/>
    <result column="RECEIVE_NICKNAME" property="receiveNickName"/>
  </resultMap>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard">
		INSERT
			INTO
				TB_COMMUNITY
				(
				POST_NO
			,	POST_CONTENT
			,	POST_TITLE
			,	WRITER_NO
			,	WRITER_NICKNAME
			,	POST_TYPE
			, LOCATION_NAME
				)
				VALUES
				(
				SEQ_COMNO.NEXTVAL
			, #{postContent}
			, #{postTitle}
			, #{writerNo}
			, #{writerNickName}
			, #{postType}
			, #{locationName}
				)
	</insert>
	
	<!-- 게시판 첨부파일 등록 -->
	<insert id="insertAttachment">
		INSERT
			INTO
				TB_ATTACHMENT
				(
				FILE_NO
			,	FILE_PATH
			,	FILESYSTEM_NAME
			,	ORIGINAL_NAME
			,	FILE_TYPE
			,	REF_NO
				)
				VALUES
				(
				SEQ_ATNO.NEXTVAL
			, #{filePath}
			, #{filesystemName}
			, #{originalName}
			, #{refType}
			<choose>
				<when test="refNo == 0">
			, SEQ_COMNO.CURRVAL
				</when>
				<otherwise>
			, ${refNo}
				</otherwise>
			</choose>
				)
	</insert>
	
	<!-- 게시판 리스트 갯수 조회 -->
	<select id="selectBoardListCount" resultType="_int">
		SELECT COUNT(*)
	    FROM 
	        TB_COMMUNITY
		 WHERE 
		     POST_TYPE = #{type}	
	</select>
	<!-- 게시판 리스트 조회 -->
	<select id="boardList" resultMap="communityResult">
		 SELECT 
					 POST_NO
					,POST_TITLE
					,POST_CONTENT
					,WRITER_NO
					,WRITER_NICKNAME
					,TO_CHAR(POST_UPLOAD_DATE,'YY/MM/DD(DY)') AS POST_UPLOAD_DATE
					,(SELECT COUNT(*)
					    FROM TB_ATTACHMENT
					  WHERE REF_NO = POST_NO) FILE_STATUS
					,POST_COUNT
					,POST_TYPE
					, (SELECT USER_PATH
               FROM TB_MEMBER M
               WHERE C.WRITER_NO = M.USER_NO) AS USER_PATH
					, (SELECT COUNT(*)
               FROM TB_LIKE L 
              WHERE C.POST_NO = L.POST_NO) AS POST_LIKE
	    FROM 
	        TB_COMMUNITY C
		 WHERE 
		     POST_TYPE = #{type}
		 <choose>
		 	<when test="select != null and !select.equals('') ">
		  ORDER
		     BY ${select} DESC  
		 	</when>
		 	<otherwise>
		  ORDER
		     BY POST_NO DESC 
		 	</otherwise>
		 </choose>
 
	</select>
	
	<!-- 자유게시판(공지사항최근게시글포함) 조회 -->
	<select id="selectBoardMerge" resultMap="communityResult">
	<![CDATA[
		WITH RecentPosts AS (
				    SELECT POST_NO
				         ,POST_TITLE
				         ,WRITER_NO
				         ,WRITER_NICKNAME
				         ,TO_CHAR(POST_UPLOAD_DATE, 'YY/MM/DD(DY)') AS POST_UPLOAD_DATE
				         ,(SELECT COUNT(*)
				           FROM TB_ATTACHMENT
				           WHERE REF_NO = TB_COMMUNITY.POST_NO) AS FILE_STATUS
				         ,POST_COUNT
				         ,ROW_NUMBER() OVER (ORDER BY POST_UPLOAD_DATE DESC) AS RN
				         ,POST_TYPE
				    FROM TB_COMMUNITY
				    WHERE POST_TYPE = 'G'
				)
				SELECT POST_NO
				     ,POST_TITLE
				     ,WRITER_NO
				     ,WRITER_NICKNAME
				     ,POST_UPLOAD_DATE
				     ,FILE_STATUS
				     ,POST_COUNT
				     ,POST_TYPE
				FROM RecentPosts
				WHERE RN <= 3
				
				UNION ALL
				
				SELECT POST_NO
				     ,POST_TITLE
				     ,WRITER_NO
				     ,WRITER_NICKNAME
				     ,TO_CHAR(POST_UPLOAD_DATE, 'YY/MM/DD(DY)') AS POST_UPLOAD_DATE
				     ,(SELECT COUNT(*)
				       FROM TB_ATTACHMENT
				       WHERE REF_NO = TB_COMMUNITY.POST_NO) AS FILE_STATUS
				     ,POST_COUNT
				     ,POST_TYPE
				FROM TB_COMMUNITY
				WHERE POST_TYPE = 'J'
				ORDER BY POST_TYPE ASC
        			 , POST_NO DESC
			]]>	
	</select>
	
	<select id="detail" resultMap="communityResult">
		SELECT 
			    C.POST_NO,
			    C.POST_TYPE,
			    C.POST_TITLE,
			    C.POST_CONTENT,
			    C.WRITER_NO,
			    C.WRITER_NICKNAME,
			    TO_CHAR(C.POST_UPLOAD_DATE, 'YY/MM/DD(DY)') AS POST_UPLOAD_DATE,
			    C.POST_COUNT,
			    LOCATION_NAME,
			    A.FILE_NO,
			    A.FILE_PATH,
			    A.FILESYSTEM_NAME,
			    A.ORIGINAL_NAME,
			    TO_CHAR(A.UPLOAD_DATE, 'YY/MM/DD(DY)') AS UPLOAD_DATE,
			    A.FILE_TYPE,
			    (SELECT COUNT(*)
              FROM TB_LIKE
             WHERE POST_NO = #{postNo}) AS POST_LIKE
			FROM 
			    TB_COMMUNITY C
			LEFT JOIN 
			    TB_ATTACHMENT A ON (C.POST_NO = A.REF_NO AND A.FILE_TYPE = #{postType})
			WHERE C.POST_NO = #{postNo}
			  AND C.POST_STATUS = 'Y'
	</select>
	
	<update id="updateIncreaseCount">
		UPDATE TB_COMMUNITY
		  SET POST_COUNT = POST_COUNT + 1
		 WHERE POST_NO = #{postNo}
	</update>
	
	<!-- 첫번째 댓글용 	-->
	<insert id="insertComment" parameterType="com.mh.boot.dto.CommentDto">
	INSERT
		INTO
			TB_COMMENT
			(
				ID
			, ANSWER_NUM
			, CONTENT
			, REF_GROUP
			, REF_ORDER
			, STEP
			, PARENT_NUM
			, BOARD_NO
			, USER_NO
			, USER_NICKNAME
			)
			VALUES
			(
			  SEQ_CTNO.NEXTVAL
			, #{answerNum}
			, #{content}
			, #{refGroup}
			, #{refOrder}
			, #{step}
			, #{parentNum}
			, #{boardNo}
			, #{userNo}
			, #{userNickName}
			)
  	<selectKey keyProperty="id" resultType="int" order="AFTER">
        SELECT SEQ_CTNO.CURRVAL AS ID FROM DUAL
    </selectKey>
	</insert>

	<!-- 댓글 수정용 -->
	<update id="updateComment">
		UPDATE TB_COMMENT
		  SET CONTENT = #{content}
		 WHERE ID = #{id}
	</update>

	<!-- 댓글 삭제용 -->
	<update id="updateDeleteComment">
		UPDATE TB_COMMENT
		   SET DEL_YN = 'Y'
		  WHERE ID = #{id}
	</update>
	
	
	
	<!--  ajax 댓글 조회 -->
	<select id="ajaxCommentSelect" resultMap="commentResult">
		SELECT
	    			ID
			    , ANSWER_NUM
			    , CONTENT
			    , REF_GROUP
			    , REF_ORDER
			    , STEP
			    , PARENT_NUM
			    , BOARD_NO
			    , REGIST_DATE
			    , MODIFY_DATE
			    , DEL_YN
			    , USER_NO
			    , USER_NICKNAME
		 FROM TB_COMMENT
		WHERE BOARD_NO = #{boardNo}
 ORDER BY REF_GROUP ASC,
					REF_ORDER ASC
	</select>
	
	<select id="selectRefGroupCount" resultType="_int">
		SELECT NVL(MAX(REF_GROUP), 0)
		  FROM TB_COMMENT
		 WHERE BOARD_NO = #{boardNo}
	</select>

	
	<update id="updateAnswerCount">
		UPDATE TB_COMMENT
		   SET ANSWER_NUM = ANSWER_NUM + 1
		 WHERE ID = #{id} 
	</update>
	
	<select id="selectParentRefOrder" resultType="_int">
		SELECT NVL(MAX(REF_ORDER), 0)
		  FROM TB_COMMENT
		 WHERE BOARD_NO = #{boardNo}
			 AND REF_GROUP = #{refGroup}
	</select>
	
	<select id="selectStep" resultType="_int">
       SELECT NVL((SELECT STEP
						    		FROM TB_COMMENT
						   		  WHERE ID = (SELECT PARENT_NUM
									                FROM TB_COMMENT
									                WHERE ID = #{id})), 0) AS STEP
				FROM DUAL
	</select>
	
	
	
	
	
	<!-- 댓글의 자식요소 조회 -->
	<select id="checkAnswerNum" resultType="_int">
		 SELECT ANSWER_NUM
		   FROM TB_COMMENT
		  WHERE ID = #{id}
	</select>
	
	<select id="selectRefOrder" resultType="_int">
		SELECT REF_ORDER
		  FROM TB_COMMENT
		 WHERE ID = #{id}
	</select>
	
	<!-- 댓글의 자식요소가 있다면 댓글자식요소의 제일 큰 순번 + 1 -->
	<select id="selectReplyRefOrder" resultType="_int">
		SELECT NVL(MAX(REF_ORDER),0)
		  FROM TB_COMMENT
		 WHERE PARENT_NUM = #{id}
		   AND BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectNextRefOrders" resultType="java.lang.Integer">
	<![CDATA[
			SELECT ID 
			FROM TB_COMMENT 
			WHERE BOARD_NO = #{boardNo}
				AND REF_ORDER > #{refOrder}
				AND REF_GROUP = #{refGroup}
				AND PARENT_NUM != #{id}
	 ]]>
	</select>
	
	<update id="updateNextRefGroupId">
		UPDATE TB_COMMENT
		  SET  REF_ORDER = REF_ORDER + 1
		  WHERE ID IN 
		  <foreach item="item" index="index" collection="list"
      					open="(" separator="," close=")">
          #{item}
  		</foreach>
	</update>
	
	
	<!-- comment 페이지 갯수 -->
	<select id="selectCommentCount" resultType="_int">
		SELECT COUNT(*)
		  FROM TB_COMMENT
		 WHERE BOARD_NO = #{boardNo}
	</select>
	
	<update id="updateRefOrder">
		UPDATE TB_COMMENT
		   SET REF_ORDER = REF_ORDER + 1
		  WHERE ID IN
      <foreach item="item" index="index" collection="list"
      					open="(" separator="," close=")">
        ${item}
  		</foreach>
	</update>
	
	
	<select id="selectMessageListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM TB_MESSAGE_BOX 
		 <choose>
		 	<when test="send != null and send.equals('send')">
		 	WHERE SEND_ID = #{userId}
		 	  AND SEND_DEL_STATUS = 'N'
		 	  AND CUSTODY = 'N'
		 	</when>
		 	<when test="receive != null and receive.equals('receive')">
		 	WHERE RECEIVE_ID = #{userId}
		 	  AND RECEIVE_DEL_STATUS = 'N'
		 	  AND CUSTODY = 'N' 
		 	</when>
		 	<otherwise>
        WHERE CUSTODY = 'Y' 
         AND (SEND_ID = #{userId} OR RECEIVE_ID = #{userId})
		 	</otherwise>
		 </choose>
		    AND MESSAGE_COLLECT = 'N'
	</select>
	
	
	<!-- 
	<select id="selectReceiveCount">
		SELECT COUNT(*)
		  FROM TB_MESSAGE_BOX 
		 WHERE RECEIVE_ID = #{userId}
	</select>
	 -->
	 
<select id="ajaxSelectMessageList" resultMap="messageResult">
    SELECT
           MESSAGE_NO
         , SEND_ID
         , RECEIVE_ID
         , TITLE
         , CONTENT
         , DATE_SEND
         , DATE_READ
         , SEND_NICKNAME
         , (SELECT NICKNAME
            FROM TB_MEMBER
           WHERE USER_ID = RECEIVE_ID) AS RECEIVE_NICKNAME
         , MESSAGE_COLLECT
    FROM TB_MESSAGE_BOX
    <where>
        <choose>
            <when test="receive != null and receive.equals('receive')">
                RECEIVE_ID = #{userId}
                AND RECEIVE_DEL_STATUS = 'N'
                AND CUSTODY = 'N'
                AND MESSAGE_COLLECT = 'N'
            </when>
            <when test="send != null and send.equals('send')">
                SEND_ID = #{userId}
                AND SEND_DEL_STATUS = 'N'
                AND CUSTODY = 'N'
            </when>
            <otherwise>
                CUSTODY = 'Y'
                AND (SEND_ID = #{userId} OR RECEIVE_ID = #{userId})
            </otherwise>
        </choose>
    </where>
    ORDER BY MESSAGE_NO DESC
</select>

	 
	 <select id="selectNoReadCount" resultType="_int">
	   SELECT COUNT(*)
		   FROM TB_MESSAGE_BOX 
		  WHERE RECEIVE_ID = #{userId}
        AND DATE_READ IS NULL
        AND MESSAGE_COLLECT != 'Y'
	 </select>
	 
	 
	 <!-- 커뮤니티 검색기능 -->
	 <select id="selectSearchCount" resultType="_int">
	 		SELECT COUNT(*)
		    FROM 
		        TB_COMMUNITY
			 WHERE 
			     POST_TYPE = #{type}
			 <choose>
			 	<when test="category != null and category.equals('TOTAL')">
			 		AND (POST_TITLE LIKE '%' || #{search} || '%' OR
			 				 WRITER_NICKNAME LIKE '%' || #{search} || '%')
			 	</when>
			 	<otherwise>
					 AND ${category} LIKE  '%' || #{search} || '%'   
			 	</otherwise>
			 </choose>
	 </select>
	 <select id="selectSearchList" resultMap="communityResult">
		  SELECT 
						 POST_NO
						,POST_TITLE
						,WRITER_NO
						,WRITER_NICKNAME
						,POST_UPLOAD_DATE
						,(SELECT COUNT(*)
						    FROM TB_ATTACHMENT
						  WHERE REF_NO = POST_NO) FILE_STATUS
						,POST_COUNT
		    FROM 
		        TB_COMMUNITY
			 WHERE 
			     POST_TYPE = #{type}
			 <choose>
			 	<when test="category != null and category.equals('TOTAL')">
			 		AND (POST_TITLE LIKE '%' || #{search} || '%' OR
			 				 WRITER_NICKNAME LIKE '%' || #{search} || '%')
			 	</when>
			 	<otherwise>
					 AND ${category} LIKE  '%' || #{search} || '%'   
			 	</otherwise>
			 </choose>
			 ORDER
		    BY POST_NO DESC   
	 </select>
	 
		<!-- 게시글 좋아요 -->
		<insert id="insertLike">
			INSERT
					INTO
						TB_LIKE
						(
						POST_NO
					, USER_NO
						)
					VALUES
						(
						#{postNo}
					,	#{userNo}
						)
		</insert>
		
		<delete id="deleteLike">
			DELETE FROM TB_LIKE
			WHERE USER_NO = #{userNo}
			 AND POST_NO = #{postNo}
		</delete>
		
		<select id="selectLike" resultType="_int">
			SELECT COUNT(*)
				FROM TB_LIKE
			WHERE POST_NO = #{postNo}
		</select>
	 
	 	<select id="selectCheckLike" resultType="_int">
			SELECT COUNT(*)
				FROM TB_LIKE
			 WHERE POST_NO = #{postNo}
			   AND USER_NO = #{userNo}
		</select>
		
			<select id="communityLikeTopList" resultMap="communityResult">
			 SELECT A.*
		     FROM (
			        SELECT
			             CM.POST_NO AS POST_NO 
			           , POST_CONTENT
			           , POST_TITLE
			           , WRITER_NO
			           , WRITER_NICKNAME
			           , POST_TYPE
			           , POST_UPLOAD_DATE
			           , POST_STATUS
			           , (SELECT COUNT(L.POST_NO)
			                FROM TB_LIKE L
			                WHERE L.POST_NO = CM.POST_NO
			            ) AS POST_LIKE
			        FROM TB_COMMUNITY CM
			    ) A
				    ORDER BY POST_LIKE DESC
		</select>
		
		<!-- 삭제할 파일 조회 -->
	<select id="selectDelFileList" resultMap="attachResult">
		SELECT
				  FILE_NO
				, FILE_PATH
				, FILESYSTEM_NAME
				, ORIGINAL_NAME
		 FROM TB_ATTACHMENT
		 <where>
		 	<foreach item="item" collection="list"
		 			open="FILE_NO IN (" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </where>
	</select>
	
	<update id="updateWriter">
		UPDATE TB_COMMUNITY
		   SET POST_MODIFY_DATE = SYSDATE
		     , POST_CONTENT = #{postContent}
				 , POST_TITLE = #{postTitle}
				 , WRITER_NICKNAME = #{writerNickName}
				 , LOCATION_NAME = #{locationName}
		WHERE POST_NO = #{postNo} 
	</update>
	
	<!-- 파일 삭제 -->
	<delete id="deleteAttach">
		DELETE FROM TB_ATTACHMENT
		 <where>
		 	<foreach item="item" collection="list"
		 			open="FILE_NO IN (" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </where>
	</delete>
	
	
	<!-- 게시글 삭제 -->
	<update id="updateDeleteBoard">
		UPDATE TB_COMMUNITY
		   SET POST_STATUS = 'N'
		 WHERE POST_NO = #{postNo}
	</update>
	
	
		<select id="selectLikeUser" resultType="java.lang.Integer">
        SELECT POST_NO
        FROM TB_LIKE
        WHERE USER_NO = #{userNo}
    </select>
	
	
	
	
	
	
	
  


</mapper>
