<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap id="boardResult" type="BoardDto">
		<id column="board_no" property="boardNo" />
		<result column="board_title" property="boardTitle" />
		<result column="user_id" property="boardWriter" />
		<result column="count" property="count" />
		<result column="regist_date" property="registDt" />
		<result column="attach_count" property="attachCount" />
		<result column="board_content" property="boardContent"/>
		<!-- * has many 관계일 경우 (collection 기능) -->
		<!-- case 1) AttachDto 객체의 필드에 매핑시키는 resultMap이 따로 정의되어있지 않을 경우 -->
		<!--  
		<collection ofType="AttachDto" property="attachList">
			<id column="file_no" property="fileNo"/>
			<result column="file_path" property="filePath"/>
			<result column="filesystem_name" property="filesystemName"/>
			<result column="original_name" property="originalName"/>
		</collection>
		-->
		
		<!-- case 2) AttachDto 객체의 필드에 매핑시키는 resultMap이 따로 정의되어있을 경우 -->
		<collection resultMap="attachResult" property="attachList" />
	</resultMap>
	
	<resultMap id="attachResult" type="AttachDto">
		<id column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="filesystem_name" property="filesystemName"/>
		<result column="original_name" property="originalName"/>
	</resultMap>
	
	<resultMap id="replyResult" type="ReplyDto">
		<id column="reply_no" property="replyNo"/>
		<result column="reply_content" property="replyContent"/>
		<result column="user_id" property="replyWriter"/>
		<result column="regist_date" property="registDt"/>
	</resultMap>
	
	
	
	
	<select id="selectBoardListCount" resultType="_int">
		select
					 count(*)
			from board
		 where status = 'Y'
	</select>
	
	<select id="selectBoardList" resultMap="boardResult">
		select
		       board_no
		     , board_title
		     , user_id
		     , count
		     , to_char(regist_date, 'YYYY-MM-DD') regist_date
		     , (
		         select count(*)
		           from attachment
		          where ref_type = 'B'
		            and ref_no = board_no
		       ) attach_count
		  from board b
		  join member on (board_writer = user_no)
		 where b.status = 'Y'
		 order
		    by board_no desc
	</select>
	
	<select id="selectSearchListCount" resultType="_int">
		select
		       count(*)
		  from board b
		  join member on (board_writer = user_no)
		 where b.status = 'Y'
		   and ${condition} like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchList" resultMap="boardResult">
		select
		       board_no
		     , board_title
		     , user_id
		     , count
		     , to_char(regist_date, 'YYYY-MM-DD') regist_date
		     , (
		         select count(*)
		           from attachment
		          where ref_type = 'B'
		            and ref_no = board_no
		       ) attach_count
		  from board b
		  join member on (board_writer = user_no)
		 where b.status = 'Y'
		   and ${condition} like '%' || #{keyword} || '%'
		 order
		    by board_no desc
	</select>
	
	<insert id="insertBoard">
		insert
		  into board
		  (
		    board_no
		  , board_title
		  , board_writer
		  , board_content
		  )
		  values
		  (
		    seq_bno.nextval
		  , #{boardTitle}
		  , #{boardWriter}
		  , #{boardContent}
		  )
	</insert>
	
	<insert id="insertAttach">
		insert
		  into attachment
		  (
		    file_no
		  , file_path
		  , filesystem_name
		  , original_name
		  , ref_type
		  , ref_no
		  )
		  values
		  (
		    seq_ano.nextval
		  , #{filePath}
		  , #{filesystemName}
		  , #{originalName}
		  , #{refType}
		  <choose>
		  	<when test="refNo == 0">
		  	, seq_bno.currval
		  	</when>
		  	<otherwise>
		  	, #{refNo}
		  	</otherwise>
		  </choose>
		  )
	</insert>
	
	<update id="updateIncreaseCount">
		update
					 board
			 set count = count+1
		 where board_no = #{boardNo}
	</update>
	
	<select id="selectBoard" resultMap="boardResult">
		select
		       board_no
		     , board_title
		     , user_id
		     , board_content
		     , to_char(regist_date, 'YYYY-MM-DD') regist_date
		     , file_no
		     , file_path
		     , filesystem_name
		     , original_name
		  from board b
		  join member on (board_writer = user_no)
		  left join attachment on (ref_type = 'B' and ref_no = board_no)
		 where b.status = 'Y'
		   and board_no = #{boardNo}
	</select>
	
	
	<select id="selectReplyList" resultMap="replyResult">
		select
					 reply_no
				 , reply_content
				 , user_id
				 , to_char(regist_date, 'YYYY-MM-DD') regist_date
			from reply r
			join member on(reply_writer = user_no)
		 where r.status = 'Y'
		   and ref_bno = #{boardNo}
		 order
		    by reply_no desc
	</select>
	
	<insert id="insertReply">
		insert
		  into reply
		  (
		    reply_no
		  , reply_content
		  , ref_bno
		  , reply_writer
		  )
		  values
		  (
		    seq_rno.nextval
		  , #{replyContent}
		  , #{refBoardNo}
		  , #{replyWriter}
		  )
	</insert>
	
	<update id="deleteReply">
		update
				   reply
			 set status = 'N'
		 where reply_no = #{replyNo}
	</update>
	
	<select id="selectDelFileList" resultMap="attachResult">
		select
					 file_no
				 , file_path
				 , filesystem_name
				 , original_name
		  from attachment
		 <where>
		 	<foreach item="item" collection="array"
		 			open="file_no in (" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </where>
	</select>
	
	
	<update id="updateBoard">
		update
					 board
			 set board_title = #{boardTitle}
			 	 , board_content = #{boardContent}
		 where board_no = #{boardNo}
	</update>
	
	<delete id="deleteAttach">
		delete
			from attachment
		 <where>
		 	<foreach item="item" collection="array"
		 			open="file_no in (" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </where>
	</delete>
	
	<delete id="deleteReplyCompletely">
		delete
		  from reply
		 where status = 'N'
	</delete>

	

</mapper>
